{
  "Template Snippets": {
    "prefix": "snippetTemplate",
    "body": [
      "\"${1:SNIPPET_TITLE}\": {",
      "  \"prefix\": \"${2:PREFIX}\",",
      "  \"body\": [",
      "    \"${3:BODY}\"",
      "  ]",
      "},",
      ""
    ]
  },

  "CSS Export Const": {
    "prefix": "cssExportConst",
    "body": [
      "export const ${CONST_NAME} = styled.div`",
      "  ${() => css``}",
      "`"
    ]
  },

  "Icon Generator": {
    "prefix": "iconGenerator",
    "body": [
      "import SvgContainer, { SvgContainerProps } from '@/components/bosons/SvgContainer';",
      "",
      "export const $TM_FILENAME_BASE = (svgContainerProps: Omit<SvgContainerProps, 'children'>) => {",
      "  return (",
      "    <SvgContainer {...svgContainerProps}>",
      "      ",
      "    </SvgContainer>",
      "  );",
      "};"
    ]
  },

  "Store Function": {
    "prefix": "storeFunction()",
    "body": [
      "${FUNCTION_NAME}: () => set((state) =>",
      "  produce(state, (draft) => {",
      "    // to-do",
      "  })",
      "),"
    ]
  },

  "getStaticProps": {
    "prefix": "getStaticProps()",
    "body": [
      "export const getStaticProps: GetStaticProps<any, { id: string }> = async ({ params }) => {",
      "  console.log(params)",
      "  const { id } = params",
      "  return {",
      "    props: {},",
      "    revalidate: 60 * 60 * 1 // 1 hour",
      "  }",
      "}"
    ]
  },

  "getStaticPaths": {
    "prefix": "getStaticPaths()",
    "body": [
      "export const getStaticPaths: GetStaticPaths = async () => {",
      "  return {",
      "    paths: [",
      "      { params: { id: 'ID' } }",
      "    ],",
      "    fallback: false",
      "  }",
      "}"
    ]
  },

  "getServerSideProps": {
    "prefix": "getServerSideProps()",
    "body": [
      "export const getServerSideProps: GetServerSideProps = async ({ query, params }) => {",
      "  console.log(query)",
      "  console.log(params)",
      "",
      "  return {",
      "    props: {",
      "",
      "    }",
      "  }",
      "}"
    ]
  }
}
